
//!
//! AUTOGENERATED BASED ON A SET OF JSON FILES, DO NOT EDIT MANUALLY
//!

use lazy_static::lazy_static;
use zksync_error_description::ErrorHierarchy;

lazy_static! {
   pub static ref model : ErrorHierarchy = get_model();
}


fn get_model() -> ErrorHierarchy {
    let serialized_model = include_str!("../resources/model.json");
    serde_json::from_str(serialized_model).expect("Always valid")

}

#[derive(Debug)]
pub enum DocumentationError {
    IncompleteModel(String),

}

impl std::fmt::Display for DocumentationError {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        f.write_fmt(format_args!("{self:#?}"))
    }
}
impl std::error::Error for DocumentationError {}

pub trait Documented {
    type Documentation;
    fn get_documentation(&self) -> Result<Option<Self::Documentation>, DocumentationError>;
}

